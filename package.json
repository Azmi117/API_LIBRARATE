{
  "name": "api",
  "version": "1.0.0",
  "description": "",
  "main": "app.js",
  "scripts": {
    "test": "cross-env NODE_ENV=test jest --verbose --detectOpenHandles --runInBand",
    "testdrop": "cross-env NODE_ENV=test sequelize db:drop",
    "testsetup": "sh -c 'if ! psql -h $HOST -U $DB_USERNAME -d $DB_NAME -c \"\\q\" 2>/dev/null; then npm run db:create && npm run db:migrate:test; else echo \"Test Database already exists\"; fi'",
    "db:migrate:test": "cross-env NODE_ENV=test sequelize db:migrate",
    "setup": "NODE_ENV=production sh -c 'echo \"Checking DB connection...\" && psql -h $HOST -U $DB_USERNAME -d $DB_NAME -c \"\\q\" && echo \"DB connected.\" || (echo \"Creating database...\" && npm run db:create); npm run db:migrate'",
    "db:migrate": "cross-env NODE_ENV=development sequelize db:migrate",
    "db:create": "cross-env NODE_ENV=development sequelize db:create",
    "start": "NODE_ENV=production nodemon server"
  }
  ,
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "bcrypt": "^5.1.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.21.1",
    "form-data": "^4.0.1",
    "i": "^0.3.7",
    "jest": "^29.7.0",
    "jsonwebtoken": "^9.0.2",
    "multer": "^1.4.5-lts.1",
    "nodemon": "^3.1.7",
    "npm": "^10.9.0",
    "pg": "^8.13.0",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.37.4",
    "sequelize-cli": "^6.6.2",
    "supertest": "^7.0.0"
  },
  "devDependencies": {
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.4.2"
  }
}
